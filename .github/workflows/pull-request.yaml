name: Validate Pull Request

on:
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]

jobs:
  validate:
    name: Build, Test and Analyze
    runs-on: windows-latest

    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: 📦 Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: 📥 Restore dependencies
        run: dotnet restore

      - name: ☕ Setup Java (SonarCloud)
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: 🛠 Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: 🕵️‍♂️ Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        run: >
          dotnet-sonarscanner begin
          /k:"$env:SONAR_PROJECT_KEY"
          /o:"$env:SONAR_ORGANIZATION"
          /d:sonar.token="$env:SONAR_TOKEN"
          /d:sonar.verbose=true
          /d:sonar.cs.opencover.reportsPaths="**/*.cobertura.xml"

      - name: 🛠 Build
        run: dotnet build --no-incremental --configuration Release

      - name: ✅ Run Tests with Coverage
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"

      - name: 🏁 End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner end /d:sonar.token="$env:SONAR_TOKEN"
