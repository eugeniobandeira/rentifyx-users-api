name: Pipeline
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build-test-sonar:
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: ⚙️ Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
      - name: 📦 Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner
      - name: 📦 Install dependencies
        run: dotnet restore
      - name: 🕵️‍♂️ Begin SonarCloud analysis 
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin \
            /k:"${{ secrets.SONAR_PROJECT_KEY }}" \
            /o:"${{ secrets.SONAR_ORGANIZATION }}" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.coverage.exclusions="**Tests*.cs,**/obj/**" \
            /d:sonar.verbose=true
      - name: 🛠 Build
        run: dotnet build --no-restore --configuration Release
      - name: ✅ Run Tests with Coverage (COVERLET MSBUILD)
        run: |
          echo "🧪 Running tests with coverlet.msbuild..."
          rm -rf TestResults
          rm -rf coverage
          
          dotnet test \
            /p:CollectCoverage=true \
            /p:CoverletOutput=./coverage/ \
            /p:CoverletOutputFormat=opencover \
            /p:Include="[Rentifyx.Users.*]*" \
            --configuration Release \
            --no-build \
            --logger "trx;LogFileName=testresults.trx"
      - name: 🔍 VERIFY COVERAGE FILES
        run: |
          echo "🔍 Verifying coverage files..."
          COVERAGE_FILES=$(find . -name "coverage.opencover.xml" -type f)
          if [ -z "$COVERAGE_FILES" ]; then
            echo "❌ No coverage files found!"
            exit 1
          fi
          for file in $COVERAGE_FILES; do
            echo "📄 File: $file"
            echo "📏 Size: $(wc -c < "$file") bytes"
            echo "📝 First 3 lines:"
            head -3 "$file"
            echo "---"
          done
      - name: 🏁 End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "🏁 Finalizing SonarCloud analysis..."
          dotnet-sonarscanner end
      - name: 📊 Upload Coverage Files for Debug
        uses: actions/upload-artifact@v4
        with:
          name: coverage-files
          path: |
            **/*.opencover.xml
          retention-days: 7