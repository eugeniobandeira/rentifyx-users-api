name: Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: 📦 Install dependencies
        run: dotnet restore

      - name: 🛠 Build
        run: dotnet build --no-restore --configuration Release

      - name: ✅ Run Tests
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"

      - name: 📊 Publish Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/TestResults/**'

  sonar:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: 🕵️‍♂️ SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          args: >
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.cs.vscoveragexml.reportsPaths="**/coverage.cobertura.xml"
            -Dsonar.verbose=true