name: "🛠️ CI - Build and Quality"

on:
  workflow_dispatch: 

  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOTNET_VERSION: "9.x"

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "⚙️ Setup .NET"
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: "💾 Cache dependencies"
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: "📦 Restore dependencies"
        run: dotnet restore

      - name: "🏗️ Build"
        run: dotnet build --configuration Release --no-restore

      - name: "🧪 Run tests with coverage"
        run: |
          dotnet test \
            --configuration Release \
            --no-build \
            --verbosity normal \
            --collect:"XPlat Code Coverage" \
            --results-directory ./coverage \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

      - name: "🔍 SonarCloud Analysis"
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.projectName=rentifyx-users-api
            -Dsonar.coverage.exclusions=**/Test/**/*,**/Migrations/**/*
            -Dsonar.cs.vscoveragexml.reportsPaths=coverage/**/coverage.cobertura.xml

      - name: "✅ All checks passed!"
        if: success()
        run: echo "🎉 Code quality validation completed successfully!"